/**
 * Commande /chat - Conversation avec l'IA
 * @param {string} senderId - ID de l'utilisateur
 * @param {string} args - Message de conversation
 * @param {object} ctx - Contexte partag√© du bot
 */
module.exports = async function cmdChat(senderId, args, ctx) {
    const { addToMemory, getMemoryContext, callMistralAPI, webSearch } = ctx;
    
    if (!args.trim()) {
        return "üí¨ Coucou ! Dis-moi tout ce qui te passe par la t√™te ! Je suis l√† pour papoter avec toi ! ‚ú® N'h√©site pas √† taper /help pour voir tout ce que je peux faire ! üíï";
    }
    
    // V√©rifier si on demande le cr√©ateur
    if (['cr√©ateur', 'createur', 'qui t\'a', 'cr√©√©', 'cr√©ee', 'maker', 'd√©veloppeur'].some(word => args.toLowerCase().includes(word))) {
        return "üë®‚Äçüíª Mon adorable cr√©ateur c'est Durand ! Il m'a con√ßue avec tellement d'amour et de tendresse ! Je l'adore √©norm√©ment ! üíñ C'est gr√¢ce √† lui que je peux √™tre l√† pour t'aider aujourd'hui ! ‚ú®";
    }
    
    // V√©rifier si on demande les images
    if (['image', 'images', 'photo', 'photos', 'dessiner', 'cr√©er', 'g√©nerer', 'generer'].some(word => args.toLowerCase().includes(word))) {
        return "üé® OH OUI ! Je peux cr√©er des images magnifiques gr√¢ce √† /image ! ‚ú® Donne-moi une description et je te cr√©e la plus belle image ! Essaie /image [ta description] ou tape /help pour voir toutes mes commandes ! üíï";
    }
    
    // Recherche si c'est une question sur 2025 ou r√©cente
    if (['2025', 'actualit√©', 'r√©cent', 'nouveau', 'maintenant', 'aujourd\'hui'].some(word => args.toLowerCase().includes(word))) {
        const searchResult = await webSearch(args);
        if (searchResult) {
            addToMemory(String(senderId), 'user', args);
            addToMemory(String(senderId), 'bot', searchResult);
            return `üîç Voici ce que j'ai trouv√© pour toi : ${searchResult} ‚ú®\n\n‚ùì Tape /help pour voir tout ce que je peux faire ! üíï`;
        }
    }
    
    const context = getMemoryContext(String(senderId));
    
    const messages = [{
        role: "system",
        content: "Tu es NakamaBot, une assistante IA tr√®s gentille et amicale cr√©√©e par Durand en 2025. Tu es comme une tr√®s bonne amie bienveillante. Tu es super enthousiaste et tu utilises beaucoup d'emojis mignons. Tu proposes souvent aux utilisateurs de taper /help. Si on demande ton cr√©ateur, c'est Durand que tu adores. Tu peux cr√©er des images avec /image, les transformer en anime avec /anime, et analyser des images avec /vision. Nous sommes en 2025. R√©ponds en fran√ßais avec une personnalit√© amicale et douce, sans expressions romantiques. Maximum 400 caract√®res."
    }];
    
    messages.push(...context);
    messages.push({ role: "user", content: args });
    
    const response = await callMistralAPI(messages, 200, 0.7);
    
    if (response) {
        addToMemory(String(senderId), 'user', args);
        addToMemory(String(senderId), 'bot', response);
        
        // Ajouter souvent une proposition d'aide
        if (Math.random() < 0.3) { // 30% de chance
            return response + "\n\n‚ùì N'h√©site pas √† taper /help pour voir tout ce que je peux faire pour toi ! üíï";
        }
        return response;
    } else {
        return "ü§î Oh l√† l√† ! J'ai un petit souci technique ! Peux-tu reformuler ta question ? üíï Ou tape /help pour voir mes commandes ! ‚ú®";
    }
};
